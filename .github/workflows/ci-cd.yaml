name: CI/CD - Build, Test, Push and Deploy with Helm

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG_ENV: latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v3

      - name: 🧪 Run Python tests
        run: |
          cd app/backend
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pytest

      - name: 🔐 Login na AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
            docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 🐳 Build da imagem Docker
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }} ./app/backend

      - name: 🏷️ Tag da imagem com SHA
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest \
            ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest \
            ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:$SHORT_SHA

      - name: 🚀 Push da imagem para ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:$SHORT_SHA

      - name: 📊 Análise estática com SonarCloud (opcional)
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}